<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hardwares on 时光小栈</title>
    <link>/hardware/</link>
    <description>Recent content in Hardwares on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 29 Feb 2020 11:17:52 +0800</lastBuildDate>
    
	<atom:link href="/hardware/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>raspberry</title>
      <link>/hardware/raspi/raspberry/</link>
      <pubDate>Sat, 29 Feb 2020 11:17:52 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/raspi/raspberry/</guid>
      <description>[原创]初玩树莓派B 3实用配置(vnc和串口)-『智能设备』-看雪安全论坛</description>
    </item>
    
    <item>
      <title>ifplugd 实现网口检测</title>
      <link>/hardware/busybox/busybox-ifplugd/</link>
      <pubDate>Sat, 22 Feb 2020 10:14:02 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/busybox/busybox-ifplugd/</guid>
      <description>ifplugd检测eth0拔插消息 为了检测固定网线口的拔插消息，在busybox里配置了ifplugd ptions: -n Don&#39;t daemonize -s Don&#39;t log to syslog -i IFACE Interface -f/-F Treat link detection error as link</description>
    </item>
    
    <item>
      <title>linux fs mtd mtdblock</title>
      <link>/hardware/linux-fs-mtd-mtdblock/</link>
      <pubDate>Fri, 21 Feb 2020 11:14:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/linux-fs-mtd-mtdblock/</guid>
      <description>1. 文件系统简介 文件系统是一种存储和组织计算机数据的方法，它使得对其访问和查找变得容易，文件系统使用文件和树形目录的抽象逻辑概念代替了硬盘和光</description>
    </item>
    
    <item>
      <title>jetson GStreamer Pipelines Capture_and_Display</title>
      <link>/hardware/jetson/jetson-gstreamer-pipelines-capture_and_display/</link>
      <pubDate>Tue, 18 Feb 2020 17:42:53 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/jetson/jetson-gstreamer-pipelines-capture_and_display/</guid>
      <description>IMX219-160 Camera - Waveshare Wiki
NVIDIA Xavier - Capture and Display
gst-launch-1.0 nvarguscamerasrc ! &#39;video/x-raw(memory:NVMM), width=(int)1920, height=(int)1080, format=(string)NV12, framerate=(fraction)30/1&#39; ! nvoverlaysink
Performance:
Operation Mode CPU% GPU% FPS latency(ms)
0 (max performance) 0.0 4.92 30.01 114
1 (min power) 0.0 49.37 30.02 114
2 (default) 1.07 10.91 30.02 115
2592x1944@30 (native):
gst-launch-1.0 nvarguscamerasrc ! &#39;video/x-raw(memory:NVMM), width=(int)2592, height=(int)1944, format=(string)NV12, framerate=(fraction)30/1&#39; ! nvoverlaysink
DISPLAY=:0.0 gst-launch-1.0 nvarguscamerasrc ! &#39;video/x-raw(memory:NVMM), width=3280, height=2464, format=(string)NV12, framerate=(fraction)20/1&#39; ! nvoverlaysink -e</description>
    </item>
    
    <item>
      <title>jetson yolov3 csi</title>
      <link>/hardware/jetson/jetson-yolov3-csi/</link>
      <pubDate>Tue, 18 Feb 2020 17:24:22 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/jetson/jetson-yolov3-csi/</guid>
      <description>jetson-nano项目：使用csi摄像头运行yolov3-tiny demo 前言 Step 1:安装GStreamer Step 2:配置GStreamer管道 Step 3</description>
    </item>
    
    <item>
      <title>Raspberry Pi UART使用速記</title>
      <link>/hardware/raspi/raspi-usart-bt/</link>
      <pubDate>Sat, 15 Feb 2020 22:02:41 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/raspi/raspi-usart-bt/</guid>
      <description>树莓派3b+串口配置_唐传林的博客-CSDN博客 默认用户名是pi，密码是raspberry。 要先從 raspi-config 將 serial 選成 no 再從 /boot/config.txt 加入 enable_uart=1, 就可以透過 /dev/ttyAMA0 通訊 /boot/config.txt</description>
    </item>
    
    <item>
      <title>raspi home</title>
      <link>/hardware/raspi/raspi-home/</link>
      <pubDate>Sat, 15 Feb 2020 22:00:56 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/raspi/raspi-home/</guid>
      <description>Home Automation Stack The stack contains everything to run FHEM on a Docker host. Mosquitto is used as message broker. SIRI functions are realized with the help of a homebridge container. The complete stack runs on x86 as well as arm architectures. It is very easy to clone its complete productive environment and has a simple way to build a test system.
Todo  Mosquitto user-/groupid problem
 DBLog Integration</description>
    </item>
    
    <item>
      <title>raspi macos install</title>
      <link>/hardware/raspi/raspi-macos-install/</link>
      <pubDate>Fri, 14 Feb 2020 12:06:04 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/raspi/raspi-macos-install/</guid>
      <description>如何在 Raspberry Pi 上安装 Raspbian_Linux教程_Linux公社-Linux系统门户网站 如何在 Raspberry Pi 上安装 Raspbian 前几天制作树莓派的TF卡映像文件，</description>
    </item>
    
    <item>
      <title>AT指令（中文详解版）（一）</title>
      <link>/hardware/at-helper/</link>
      <pubDate>Wed, 08 Jan 2020 09:51:41 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/at-helper/</guid>
      <description>一 ． 一 般 命 令 1．AT+CGMI 给出模块厂商的标识。 2．AT+CGMM 获得模块标识。这个命令用来得到支持的频带（GSM 900，DCS 1800 或PCS</description>
    </item>
    
    <item>
      <title>EC20 AT 串口使用TCPIP</title>
      <link>/hardware/ec20-at/</link>
      <pubDate>Wed, 11 Dec 2019 15:18:59 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/ec20-at/</guid>
      <description>EC20的低功耗模式 - 杰瑞鼠 - 博客园 https://github.com/kenh0u/apn_selector/blob/a6954a8dbf66d6589fabacbcecd1151240095619/setup_air.sh stty -F /dev/ttyACM0 -echo cat /dev/ttyACM0 &amp;amp; AT+GSN echo -e &amp;quot;AT+CFUN=0\r\n&amp;quot; &amp;gt;/dev/ttyACM0 echo -e &amp;quot;AT+CGDCONT=1,\&amp;quot;ip\&amp;quot;,\&amp;quot;internet\&amp;quot;\r\n&amp;quot; &amp;gt;/dev/ttyACM0 echo -e &amp;quot;AT+UCGDFLT=1,\&amp;quot;ip\&amp;quot;,\&amp;quot;internet\&amp;quot;\r\n&amp;quot; &amp;gt;/dev/ttyACM0 echo -e &amp;quot;AT+CFUN=1\r\n&amp;quot; &amp;gt;/dev/ttyACM0 echo -e &amp;quot;AT+COPS?\r\n&amp;quot; &amp;gt;/dev/ttyACM0 echo -e &amp;quot;AT+CGCONTRDP\r\n&amp;quot; &amp;gt;/dev/ttyACM0 echo -e &amp;quot;AT+CIND?\r\n&amp;quot; &amp;gt;/dev/ttyACM0 echo -e &amp;quot;AT+CGDCONT?\r\n&amp;quot; &amp;gt;/dev/ttyACM0 echo -e &amp;quot;AT+CGACT=1,1\r\n&amp;quot; &amp;gt;/dev/ttyACM0 echo -e &amp;quot;AT+CGDCONT?\r\n&amp;quot; &amp;gt;/dev/ttyACM0 config_apn spawn cu</description>
    </item>
    
    <item>
      <title>xiongmai</title>
      <link>/hardware/xiongmai/</link>
      <pubDate>Thu, 14 Nov 2019 19:34:08 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/xiongmai/</guid>
      <description>在ubuntu上控制雄迈模块的参数 雄迈摄像机数字接口 NeiroNx/python-dvr: xmeye sofia dvr nvr ipcam config</description>
    </item>
    
    <item>
      <title>jetson</title>
      <link>/hardware/jetson/jetson/</link>
      <pubDate>Sat, 19 Oct 2019 18:18:03 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/jetson/jetson/</guid>
      <description>!!!TX2的電源是12V，Nano的是5V，不可混用!!! 技术参数 1. 开机初始配置 1.1 器件准备 1.2 烧写系统 1.3 开机配置 1.4 关闭图形界面 1.4.1 关闭图像用户</description>
    </item>
    
    <item>
      <title>linux 内核中的pwm</title>
      <link>/hardware/linux-pwm/</link>
      <pubDate>Fri, 11 Oct 2019 10:02:45 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/linux-pwm/</guid>
      <description>PWM常用来做电机控制、LED背光亮度调节、开关电源等。 Linux pwm driver with sysfs TI linux pwm user guide: http://processors.wiki.ti.com/index.php/Linux_Core_PWM_User%27s_Guide#eHRPWM Freescale: https://support.bluetechnix.at/wiki/Linux_Software_User_Manual_(i.MX6)#PWM Gateworks: http://trac.gateworks.com/wiki/linux/pwm 对于TI的pwm来说 首先配置内核支持pwm模块，其中e</description>
    </item>
    
    <item>
      <title>camera</title>
      <link>/hardware/camera/camera/</link>
      <pubDate>Tue, 13 Aug 2019 15:00:53 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/camera/camera/</guid>
      <description>200万H265高清4G插卡无线摄像头模块DIY监控1080模组半成品无外壳 开放平台 http://open.xmeye.net/zh/</description>
    </item>
    
    <item>
      <title>gcc linaro aarch64 linux gnu</title>
      <link>/hardware/gcc-linaro-aarch64-linux-gnu/</link>
      <pubDate>Fri, 02 Aug 2019 14:13:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/gcc-linaro-aarch64-linux-gnu/</guid>
      <description>macos 安装 ARM 交叉编译环境 gcc-linaro-7.4.1-2019.02-i686_aarch64-linux-gnu sudo tar xJf gcc-linaro-7.2.1-2017.11-x86_64_aarch64-linux-gnu.tar.xz -C /usr/local/ export PATH=/usr/local/gcc-linaro-7.4.1-2019.02-i686_aarch64-linux-gnu/bin:$PATH aarch64-linux-gnu-g++ -v GCC 5 和 GCC7 多版本共存 ls /usr/bin/gcc* sudo apt-get install gcc-4.8 sudo apt-get install g++-4.8 sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 40 sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 50 sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 70 sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 40 sudo update-alternatives</description>
    </item>
    
    <item>
      <title>go hardware</title>
      <link>/hardware/go-hardware/</link>
      <pubDate>Wed, 22 May 2019 10:53:46 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/go-hardware/</guid>
      <description>rakyll/go-hardware: A directory of hardware related libs, tools, and tutorials for Go</description>
    </item>
    
    <item>
      <title>platform 总线</title>
      <link>/hardware/platform/device/</link>
      <pubDate>Tue, 07 May 2019 11:10:18 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/platform/device/</guid>
      <description>设备 总线 驱动 相互独立 设备 在注册时 自动寻找驱动,反过来也是 驱动在注册时自动寻找设备 他们所挂载的总线(bus)用来做匹配, probe 函数执行的前提是, 驱</description>
    </item>
    
    <item>
      <title>go gpio</title>
      <link>/hardware/go-gpio/</link>
      <pubDate>Fri, 26 Apr 2019 09:03:35 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/go-gpio/</guid>
      <description>Linux下用文件IO的方式操作GPIO（/sys/class/gpio） - 卢小喵的学习笔记 - CSDN博客 Golang笔记–04–GPIO与</description>
    </item>
    
    <item>
      <title>go usart</title>
      <link>/hardware/go-usart/</link>
      <pubDate>Fri, 26 Apr 2019 08:59:54 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/go-usart/</guid>
      <description>https://github.com/andrewloable/treadmill-streetview/
func ReadSerial(s *serial.Port) { buf := make([]byte, 128) n, err := s.Read(buf) if err != nil { fmt.Printf(&amp;quot;read err %s&amp;quot;, err) } fmt.Printf(&amp;quot;Read: %x \n&amp;quot;, buf[:n]) } func WriteSerial(s *serial.Port, b []byte) { _, err := s.Write(b) if err != nil { fmt.Printf(&amp;quot;%s&amp;quot;, err) } fmt.Printf(&amp;quot;Wrote: %x\n&amp;quot;, b) }  package main import ( &amp;quot;encoding/json&amp;quot; &amp;quot;fmt&amp;quot; &amp;quot;io/ioutil&amp;quot; &amp;quot;net/http&amp;quot; &amp;quot;os/exec&amp;quot; &amp;quot;runtime&amp;quot; &amp;quot;time&amp;quot; &amp;quot;github.com/gin-gonic/gin&amp;quot; cors &amp;quot;github.com/itsjamie/gin-cors&amp;quot; &amp;quot;github.com/tarm/serial&amp;quot; ) // SerialConfig ... type SerialConfig struct { Name string Baud int } var config SerialConfig var loops int64 // {&amp;quot;Name&amp;quot;:&amp;quot;COM4&amp;quot;,&amp;quot;Baud&amp;quot;:9600} func readConfigFromFile(ps *SerialConfig) { file, err := ioutil.</description>
    </item>
    
    <item>
      <title>go i2c</title>
      <link>/hardware/go-i2c/</link>
      <pubDate>Fri, 26 Apr 2019 08:59:40 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/go-i2c/</guid>
      <description>https://github.com/d2r2/go-i2c 对10位地址操作 https://github.com/golang/exp/blob/master/io/i2c/i2c.go / resolveAddr returns whether the addr is 10-bit masked or not. // It also returns the unmasked address. func resolveAddr(addr int) (unmasked int, tenbit bool) { return addr &amp;amp; (tenbitMask - 1), addr&amp;amp;tenbitMask == tenbitMask } go: AM2320传感器：CRC不匹配，来自传感器的</description>
    </item>
    
    <item>
      <title>freertos semphone</title>
      <link>/hardware/freertos/freertos-semphone/</link>
      <pubDate>Thu, 25 Apr 2019 15:21:46 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/freertos/freertos-semphone/</guid>
      <description>FreeRTOS — 计数信号量，二值信号量** - Liu_Jing - 博客园 FreeRTOS — 计数信号量，二值信号量**</description>
    </item>
    
    <item>
      <title>modbus基础</title>
      <link>/hardware/modbus/</link>
      <pubDate>Tue, 29 Mar 2016 21:25:45 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/modbus/</guid>
      <description>Modbus总结 1.概念 ①Coil和Register Modbus中定义的两种数据类型。 Coil是位（bit）变量； Register是整型（W</description>
    </item>
    
    <item>
      <title>汽车CAN总线分析框架CANToolz</title>
      <link>/hardware/cantoolz/</link>
      <pubDate>Tue, 29 Mar 2016 21:25:45 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/cantoolz/</guid>
      <description>汽车CAN总线分析框架CANToolz CANToolz 是一个分析控制局域网络CAN(Controller Area Network) 和设备的框架。该工具基于不同的模块组装在一起，</description>
    </item>
    
    <item>
      <title>STM32_定时器</title>
      <link>/hardware/stm32-%E5%AE%9A%E6%97%B6%E5%99%A8/</link>
      <pubDate>Wed, 09 Dec 2015 11:00:19 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/stm32-%E5%AE%9A%E6%97%B6%E5%99%A8/</guid>
      <description>最近做项目，用到定时器，索性重新学习一下，以前只是用于简单的pwm生成和中断处理，对定时器根本就没有进行深入研究，今天借此机会，重新学习一下</description>
    </item>
    
    <item>
      <title>STM32_GPIO模式</title>
      <link>/hardware/stm32-gpio%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Fri, 04 Dec 2015 10:54:16 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/stm32-gpio%E6%A8%A1%E5%BC%8F/</guid>
      <description>所有的开漏输出都需要接上拉电阻。 ## 1、普通推挽输出（GPIO_Mode_Out_PP）: 使用场合：一般用在0V和3.3V的场合。线路经过两个</description>
    </item>
    
    <item>
      <title>STM32_TIM定时器</title>
      <link>/hardware/stm32-tim%E5%AE%9A%E6%97%B6%E5%99%A8/</link>
      <pubDate>Thu, 03 Dec 2015 14:44:28 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/stm32-tim%E5%AE%9A%E6%97%B6%E5%99%A8/</guid>
      <description>名词解释： 1.单脉冲模式 One Pulse mode TIM_SelectOnePulseMode(TIM2, TIM_OPMode_Single)//设置TIM2在单脉冲模式，且是单一的脉冲，在下一个更新事件停止 关于始</description>
    </item>
    
    <item>
      <title>STM32_NVIC中断响应</title>
      <link>/hardware/stm32-nvic%E4%B8%AD%E6%96%AD%E5%93%8D%E5%BA%94/</link>
      <pubDate>Thu, 03 Dec 2015 14:18:57 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/stm32-nvic%E4%B8%AD%E6%96%AD%E5%93%8D%E5%BA%94/</guid>
      <description>STM32中断优先级彻底讲解 - 凡人的博客 - CSDN博客 NVIC，中文名嵌套中断向量控制器，是Cortex-M3系列控制器内部独有集成单元，与</description>
    </item>
    
    <item>
      <title>STM32中断</title>
      <link>/hardware/stm32%E4%B8%AD%E6%96%AD/</link>
      <pubDate>Wed, 02 Dec 2015 14:39:18 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/stm32%E4%B8%AD%E6%96%AD/</guid>
      <description>stmcube太强大了 0x00 外部中配置EXIT stm32中断边沿是可配置的 既可以配置为上升沿触发，也可配置为下降沿触发，还可以同时触发</description>
    </item>
    
  </channel>
</rss>