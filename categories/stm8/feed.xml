<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>stm8 on 时光小栈</title><link>/categories/stm8/</link><description>Recent content in stm8 on 时光小栈</description><generator>Hugo -- gohugo.io</generator><language>zh-Hans</language><managingEditor>rinetd@163.com (rinetd)</managingEditor><webMaster>rinetd@163.com (rinetd)</webMaster><copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright><lastBuildDate>Tue, 17 Mar 2020 16:13:32 +0800</lastBuildDate><atom:link href="/categories/stm8/feed.xml" rel="self" type="application/rss+xml"/><item><title>stm8 adc</title><link>/hardware/stm8/stm8-adc/</link><pubDate>Tue, 17 Mar 2020 16:13:32 +0800</pubDate><author>rinetd@163.com (rinetd)</author><guid>/hardware/stm8/stm8-adc/</guid><description>void InitADC(void) { //PD6 set as FloatingInput PD_DDR &amp;amp;= 0xBF;//1011 1111 PD_CR1 &amp;amp;= 0xBF; PD_CR2 &amp;amp;= 0xBF; ADC_CR1 = 0x01;//first time open ADC£¬second time convert ADC data ADC_CSR = 0X06;//choose channel AIN6 ADC_CR2 = 0X00;//left arrange (default) } unsigned int GetADC(void) { volatile unsigned int adcValue; volatile unsigned char tmp = 100; ADC_CR1 |= 0x01;//first time open ADC while(tmp--); ADC_CR1</description></item></channel></rss>