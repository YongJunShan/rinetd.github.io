<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux-system on 时光小栈</title><link>/categories/linux-system/</link><description>Recent content in linux-system on 时光小栈</description><generator>Hugo -- gohugo.io</generator><language>zh-Hans</language><managingEditor>rinetd@163.com (rinetd)</managingEditor><webMaster>rinetd@163.com (rinetd)</webMaster><copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright><lastBuildDate>Tue, 23 Jun 2020 19:19:22 +0800</lastBuildDate><atom:link href="/categories/linux-system/feed.xml" rel="self" type="application/rss+xml"/><item><title>linux system signal</title><link>/language/linux-system/linux-system-signal/</link><pubDate>Tue, 23 Jun 2020 19:19:22 +0800</pubDate><author>rinetd@163.com (rinetd)</author><guid>/language/linux-system/linux-system-signal/</guid><description>一、信号的概念 信号随时发生，接受信号的进程也可以没有控制权 每个信号名都以SIG开头，包含在中 当进程接收到一个信号，他可以对信号采取如下操作之</description></item><item><title>linux system io</title><link>/language/linux-system/linux-system-io/</link><pubDate>Tue, 23 Jun 2020 19:18:53 +0800</pubDate><author>rinetd@163.com (rinetd)</author><guid>/language/linux-system/linux-system-io/</guid><description>####1、文件描述符 -STDIN_FILENO 0 标准输入 -STDOUT_FILENO 1 标准输出 -STDERR_FILENO 2 标准错误 ####2、系统函数 open() close() 打开、关闭文件 -//该包含的头文件 -#include &amp;lt;sys/types.h- -#include &amp;lt;sys/stat.h- -#include &amp;lt;fcntl.h- -#include &amp;lt;unistd.h- -int open(const char* pathname,</description></item><item><title>linux system socket</title><link>/language/linux-system/linux-system-socket/</link><pubDate>Tue, 23 Jun 2020 19:18:29 +0800</pubDate><author>rinetd@163.com (rinetd)</author><guid>/language/linux-system/linux-system-socket/</guid><description>一 TCP/IP与套接字 套接字是通信端点的抽象 套接字同样适用于本地的通信,代替管道 wirte和read同样适用于套接字 二 TCP通讯 1)tcp使</description></item><item><title>linux system thread</title><link>/language/linux-system/linux-system-thread/</link><pubDate>Tue, 23 Jun 2020 19:17:57 +0800</pubDate><author>rinetd@163.com (rinetd)</author><guid>/language/linux-system/linux-system-thread/</guid><description>####1,进程创建方式 system 系统调用shell fork 创建和父进程一样的进程拷贝 exec 创建一个新的进程，与父进程不同 ####2,得到pid、和ppid #include</description></item><item><title>linux system ipc</title><link>/language/linux-system/linux-system-ipc/</link><pubDate>Tue, 23 Jun 2020 19:17:31 +0800</pubDate><author>rinetd@163.com (rinetd)</author><guid>/language/linux-system/linux-system-ipc/</guid><description>一、无名管道 无名管道时半双工的，就是对于一个管道来讲，只能读或者写 无名管道只能在相关、有共同祖先的进程间使用 一个fork或者exec调用创建</description></item><item><title>linux system libso</title><link>/language/linux-system/linux-system-libso/</link><pubDate>Tue, 23 Jun 2020 19:17:04 +0800</pubDate><author>rinetd@163.com (rinetd)</author><guid>/language/linux-system/linux-system-libso/</guid><description>###so库简介 so文件在linux中为共享库，与windows下的dll文件类似 so文件中的函数可以供多个进程调用，最大可能的提供二进制代</description></item><item><title>linux system pthread</title><link>/language/linux-system/linux-system-pthread/</link><pubDate>Tue, 23 Jun 2020 19:16:30 +0800</pubDate><author>rinetd@163.com (rinetd)</author><guid>/language/linux-system/linux-system-pthread/</guid><description>一 什么是线程? - 进程执行的最小单元是线程,被称为轻量级进程(LightWeight Process,LWP) - 单线程的进程可以简单认为是只有一个线程的进程 - 一个进程</description></item><item><title>linux system</title><link>/language/linux-system/linux-system/</link><pubDate>Tue, 23 Jun 2020 19:16:01 +0800</pubDate><author>rinetd@163.com (rinetd)</author><guid>/language/linux-system/linux-system/</guid><description>@@@@cpu如何操作内存？ ①通过地址总线告诉内存控制器。在什么地方操作数据 ②控制总线，发送读/写的信号 ③数据总线，传送数据 #makefil</description></item></channel></rss>