<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>clang on 时光小栈</title>
    <link>/categories/clang/</link>
    <description>Recent content in clang on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 11 Dec 2019 11:17:08 +0800</lastBuildDate>
    
	<atom:link href="/categories/clang/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linux下头文件以及库 编译链接运行时的搜寻路径顺序</title>
      <link>/language/clang/make-gcc-include-order/</link>
      <pubDate>Wed, 11 Dec 2019 11:17:08 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/clang/make-gcc-include-order/</guid>
      <description>Linux下头文件以及库 编译链接运行时的搜寻路径顺序 - ltshan139的专栏 LIBRARY_PATH 环境变量用于在程序编译期间查找动态链接库时指定查找共享库的路</description>
    </item>
    
    <item>
      <title>clang define extern c</title>
      <link>/language/clang/clang-define-extern-c/</link>
      <pubDate>Wed, 11 Dec 2019 10:23:02 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/clang/clang-define-extern-c/</guid>
      <description>extern &amp;quot;C&amp;quot; 在C/C++中的用法 无论是C++调用C api 还是C调用C++ API， 必须先在API所对应得头文件对API进行 extern &amp;quot;C&amp;quot;声明</description>
    </item>
    
    <item>
      <title>clang 3维数组的初始化</title>
      <link>/language/clang/clang-array/</link>
      <pubDate>Wed, 11 Dec 2019 10:20:42 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/clang/clang-array/</guid>
      <description>int a[2][3][4] = { {{1,2,3,4},{1,2,3,4},{1,2,3,4}}, {{5,6,7,8},{5,6,7,8},{5,6,7,8}} }; 注意初始化要先从最外围开始。</description>
    </item>
    
    <item>
      <title>linux string strnicmp</title>
      <link>/language/clang/linux-string-strnicmp/</link>
      <pubDate>Thu, 28 Nov 2019 15:06:06 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/clang/linux-string-strnicmp/</guid>
      <description>#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;string.h&amp;gt; void main() { char *input=&amp;quot;I am OldWolf&amp;quot;; char *str=&amp;quot;I am Oldwolf&amp;quot;; int cmp; printf(&amp;quot;原字符串分别为：\n%s\n%s\n\n&amp;quot;,str1,str2); res=strnicmp(*input, str,</description>
    </item>
    
    <item>
      <title>linux string strsep</title>
      <link>/language/clang/linux-string-strsep/</link>
      <pubDate>Thu, 28 Nov 2019 14:40:23 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/clang/linux-string-strsep/</guid>
      <description>/* lib/string.c */ strsep函数用于分割字符串 该函数同strtok函数类似，用来替换strtok函数 char *strsep(char **s, const char *delim); s为指向欲分割的字符串，delim为分</description>
    </item>
    
    <item>
      <title>c http post file</title>
      <link>/language/clang/c-http-post-file/</link>
      <pubDate>Fri, 15 Nov 2019 17:20:47 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/clang/c-http-post-file/</guid>
      <description>基于C语言实现HTTP POST 表单形式上传文件 - fangye945a的博客 - CSDN博客 all: gcc -pthread -I. http_post.c clean: rm -f a.out POST /Server/interface_picture_upload.action?appid=wmj_BZ2WeU7K1iP&amp;amp;appsecret=MXkMcT43JsIgAwBwVJ30EbA2ovIcpfCQ&amp;amp;sn=0 HTTP/1.1 Host: test.inteink.com User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:59.0) Gecko/20100101 Firefox/59.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip,</description>
    </item>
    
    <item>
      <title>gcc</title>
      <link>/language/clang/gcc/</link>
      <pubDate>Thu, 23 May 2019 10:58:04 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/clang/gcc/</guid>
      <description>linux ldconfig命令,环境变量文件配置详解 - winycg的博客 - CSDN博客 为什么使用静态编译方式编译应用程序无法使用动态库 【现象】 客户 A</description>
    </item>
    
    <item>
      <title>c void</title>
      <link>/language/clang/c-void/</link>
      <pubDate>Wed, 22 May 2019 19:17:38 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/clang/c-void/</guid>
      <description>C语言中void和NULL - ascend的专栏 - CSDN博客 #define NULL ((void *)0) void的作用 a. 对函数参数的限定：当不需要传入参数时，即 function (void); b. 对函数返回</description>
    </item>
    
    <item>
      <title>Linux内核中的offsetof和container_of</title>
      <link>/language/clang/c-container_of/</link>
      <pubDate>Sat, 20 Apr 2019 09:26:47 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/clang/c-container_of/</guid>
      <description>关于list_for_each_entry相关函数 - 简书 链表是内核最经典的数据结构之一，说到链表就不得不提及内核最经典 (没有之一) 的宏con</description>
    </item>
    
    <item>
      <title>c位操作</title>
      <link>/language/clang/c-bit-operate/</link>
      <pubDate>Fri, 19 Apr 2019 16:29:17 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/clang/c-bit-operate/</guid>
      <description>bitops.h 位运算技巧 记得iOS总有一道面试题在不使用第三个变量的情况下交换两个变量的值，这里用到异或的上面加解密中的特性。我有x、y两个个变量，做如</description>
    </item>
    
    <item>
      <title>c语言define的使用方法总结</title>
      <link>/language/clang/c-define/</link>
      <pubDate>Fri, 19 Apr 2019 11:13:07 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/clang/c-define/</guid>
      <description>#和##有什么区别？ 他们都不会将参数进行展开 1. # 的作用是将宏定义中的参数转换成“字符串” #define STR(x) #x =&amp;gt; a=1; STR(a) &amp;quot;a&amp;quot; 2. ##的作用是将宏定义中的参数变成字符</description>
    </item>
    
    <item>
      <title>C语言中的指针</title>
      <link>/language/clang/c-point/</link>
      <pubDate>Sat, 13 Apr 2019 10:15:58 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/clang/c-point/</guid>
      <description>直接对物理地址0x5a000赋值 *((int *)0x5a0000) =0x01 将一个地址变成函数并调用 #define POWERDOWN(clk) ((void(*)(int))0x00000020)(clk) int main(){ int addr; 定义一个变量用来存放地址 addr = (int)test; 将一个函数的入口地址转换成int 存</description>
    </item>
    
  </channel>
</rss>